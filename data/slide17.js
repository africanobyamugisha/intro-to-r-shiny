(function(){var loadHandler=window['sl_{61CCB9B5-8D40-4348-9EF9-89D8829828F9}'];loadHandler&&loadHandler(16, '<div id="spr0_6173374"><div id="spr1_6173374" class="kern slide"><img id="img0_6173374" src="data/img0.png" width="720px" height="405px" alt="" style="left:0px;top:0px;"/><div id="svg2_6173374" style="left:684px;top:368.098px;"><svg width="37" height="37" viewBox="0 0 37 37"><g fill="none"><g transform="matrix(-1,0,0,1,36.897636,0)"><path fill="#00b5dd" d="M0,0 V36.898 H36.898 Z"/></g></g></svg></div></div><div id="spr2_6173374" class="kern slide"><div id="spr3_6173374" style="left:35.006px;top:18.781px;"><div style="width:0px;"><span id="txt0_6173374" class="nokern" data-width="174.000015" style="top:-10.048px;">Reactivity</span></div></div><div id="spr4_6173374" style="left:35.006px;top:84.832px;"><div style="width:0px;"><span id="txt1_6173374" class="nokern relpos" dir="auto" style="left:9px;top:-1.443px;">▸</span> <span id="txt2_6173374" class="nokern relpos" data-width="570.862305" style="left:20.496px;top:3.106px;">Reactivity is the ability of a Shiny application to automatically update its outputs whenever its inputs</span></div><div style="width:0px;"><span id="txt3_6173374" class="nokern" data-width="40.892578" style="left:36px;top:22.581px;">change</span></div></div><div id="spr5_6173374" style="left:35.006px;top:84.832px;"><div style="width:0px;"><span id="txt4_6173374" class="nokern relpos" dir="auto" style="left:9px;top:50.007px;">▸</span> <span id="txt5_6173374" class="nokern relpos" data-width="548.590820" style="left:20.496px;top:54.556px;">To add reactivity to a Shiny app, you can use reactive expressions and reactive functions, such as</span></div><div style="width:0px;"><span id="txt6_6173374" class="nokern relpos" data-width="46.320312" style="left:36px;top:72.531px;">observe</span> <span id="txt7_6173374" class="nokern relpos" data-width="27.747070" style="left:35.995px;top:72.531px;"> and </span> <span id="txt8_6173374" class="nokern relpos" data-width="53.785156" style="left:35.99px;top:72.531px;">reactive; </span> <span id="txt9_6173374" class="nokern relpos" data-width="406.389648" style="left:35.985px;top:72.531px;">Aa reactive expression is a special type of expression that automatically</span></div><div style="width:0px;"><span id="txt10_6173374" class="nokern" data-width="253.797852" style="left:36px;top:90.506px;">updates whenever one of its inputs changes.</span></div></div><div id="spr6_6173374" style="left:35.006px;top:84.832px;"><div style="width:0px;"><span id="txt11_6173374" class="nokern relpos" dir="auto" style="left:9px;top:117.932px;">▸</span> <span id="txt12_6173374" class="nokern relpos" data-width="133.437500" style="left:20.496px;top:122.481px;">Commonly, we use the </span> <span id="txt13_6173374" class="nokern relpos" data-width="46.135742" style="left:20.491px;top:122.481px;">render_</span> <span id="txt14_6173374" class="nokern relpos" data-width="79.378906" style="left:20.486px;top:122.481px;"> functions, for</span> <span id="txt15_6173374" class="nokern relpos" data-width="134.654297" style="left:20.481px;top:124.606px;"> default reactive behavior :-</span> <span id="txt16_6173374" class="nokern relpos" style="left:20.476px;top:124.606px;"> </span> <span id="txt17_6173374" class="nokern relpos" data-width="143.156250" style="left:20.471px;top:124.606px;"> renderPlot() , renderTable() ,</span></div><div style="width:0px;"><span id="txt18_6173374" class="nokern" data-width="191.689453" style="left:36px;top:140.658px;">renderPrint() , renderTextOutput() , etc</span></div></div><div id="spr7_6173374" style="left:35.006px;top:84.832px;"><div style="width:0px;"><span id="txt19_6173374" class="nokern relpos" dir="auto" style="left:9px;top:165.317px;">▸</span> <span id="txt20_6173374" class="nokern relpos" data-width="58.645508" style="left:20.496px;top:169.866px;">reactive() </span> <span id="txt21_6173374" class="nokern relpos" data-width="480.210938" style="left:20.491px;top:169.866px;">is used to create a reactive expression that automatically updates itself whenever its</span></div><div style="width:0px;"><span id="txt22_6173374" class="nokern relpos" data-width="168.909180" style="left:36px;top:187.841px;">reactive inputs change, while </span> <span id="txt23_6173374" class="nokern relpos" data-width="55.042969" style="left:35.995px;top:187.841px;">observe()</span> <span id="txt24_6173374" class="nokern relpos" data-width="352.789062" style="left:35.99px;top:187.841px;"> is used to create an observer that gets executed whenever its</span></div><div style="width:0px;"><span id="txt25_6173374" class="nokern" data-width="423.800781" style="left:36px;top:211.816px;">reactive inputs change and performs a side effect based on those changes.</span></div></div><div id="spr8_6173374" style="left:681.026px;top:365.098px;"><div style="width:0px;"><span id="txt26_6173374" class="nokern" data-width="9.792000" style="left:26px;top:22.498px;">17</span></div></div></div></div>', '{"s":[]}');})();